// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: outbox.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertOutbox = `-- name: InsertOutbox :one
INSERT INTO outbox (
    aggregate_type,
    aggregate_id,
    event_type,
    payload,
    request_id
)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, occurred_at
`

type InsertOutboxParams struct {
	AggregateType string
	AggregateID   string
	EventType     string
	Payload       []byte
	RequestID     string
}

type InsertOutboxRow struct {
	ID         pgtype.UUID
	OccurredAt pgtype.Timestamptz
}

func (q *Queries) InsertOutbox(ctx context.Context, arg InsertOutboxParams) (InsertOutboxRow, error) {
	row := q.db.QueryRow(ctx, insertOutbox,
		arg.AggregateType,
		arg.AggregateID,
		arg.EventType,
		arg.Payload,
		arg.RequestID,
	)
	var i InsertOutboxRow
	err := row.Scan(&i.ID, &i.OccurredAt)
	return i, err
}
