// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"auth_service/internal/grpc/controller"
	"auth_service/internal/grpc/helper"
	"auth_service/internal/grpc/mapper"
	"auth_service/internal/grpc/repos"
	"auth_service/internal/grpc/services"
)

// Injectors from auth.wire.go:

func InjectAuthController() *controller.AuthController {
	authRepo := repos.NewAuthRepo()
	jwtHelper := helper.NewJWTHelper()
	authService := services.NewAuthService(authRepo, jwtHelper)
	authController := controller.NewAuthController(authService, jwtHelper)
	return authController
}

func InjectPermissionController() *controller.PermissionController {
	permissionRepo := repos.NewPermissionRepo()
	permissionMapper := mapper.NewPermissionMapper()
	permissionService := services.NewPermissionService(permissionRepo, permissionMapper)
	permissionController := controller.NewPermissionController(permissionService)
	return permissionController
}

func InjectRoleController() *controller.RoleController {
	roleRepo := repos.NewRoleRepo()
	roleMapper := mapper.NewRoleMapper()
	roleService := services.NewRoleService(roleRepo, roleMapper)
	roleController := controller.NewRoleController(roleService)
	return roleController
}

func InjectUserController() *controller.UserController {
	userRepo := repos.NewUserRepo()
	userMapper := mapper.NewUserMapper()
	userService := services.NewUserService(userRepo, userMapper)
	userController := controller.NewUserController(userService)
	return userController
}
